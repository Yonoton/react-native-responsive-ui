{"version":3,"sources":["ResponsiveComponent.tsx"],"names":["ResponsiveComponent","Component","window","Dimensions","get","dims","setState","componentDidMount","addEventListener","onDimensionChange","componentWillUnmount","removeEventListener"],"mappings":";;;;;;;AAAA;;AACA;;;;AASe,MAAeA,mBAAf,SAA2CC,gBAA3C,CAGb;AAAA;AAAA;;AAAA,mCACQ;AACNC,MAAAA,MAAM,EAAEC,wBAAWC,GAAX,CAAe,QAAf;AADF,KADR;;AAAA,+CAaqBC,IAAD,IAAoC,KAAKC,QAAL,CAAcD,IAAd,CAbxD;AAAA;;AAKAE,EAAAA,iBAAiB,GAAG;AAClBJ,4BAAWK,gBAAX,CAA4B,QAA5B,EAAsC,KAAKC,iBAA3C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBP,4BAAWQ,mBAAX,CAA+B,QAA/B,EAAyC,KAAKF,iBAA9C;AACD;;AAXD","sourcesContent":["import { Component } from \"react\";\nimport { Dimensions, ScaledSize } from \"react-native\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface ResponsiveComponentProps {}\n\ninterface ResponsiveComponentState {\n  window: ScaledSize;\n}\n\nexport default abstract class ResponsiveComponent extends Component<\n  ResponsiveComponentProps,\n  ResponsiveComponentState\n> {\n  state = {\n    window: Dimensions.get(\"window\"),\n  };\n\n  componentDidMount() {\n    Dimensions.addEventListener(\"change\", this.onDimensionChange);\n  }\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener(\"change\", this.onDimensionChange);\n  }\n\n  onDimensionChange = (dims: ResponsiveComponentState) => this.setState(dims);\n}\n"]}