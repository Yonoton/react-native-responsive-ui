{"version":3,"sources":["useDimensions.ts"],"names":["useDimensions","dimensions","setDimensions","Dimensions","get","onChange","window","width","height","scale","fontScale","eventSubscription","addEventListener","remove"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAMA,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAASC,wBAAWC,GAAX,CAAe,QAAf,CAAT,CAApC;;AAEA,QAAMC,QAAQ,GAAG,CAAC;AAChBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB;AADQ,GAAD,KAIXR,aAAa,CAAC;AAAEK,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAAD,CAJnB;;AAMA,wBAAU,MAAM;AACd,UAAMC,iBAAiB,GAAGR,wBAAWS,gBAAX,CAA4B,QAA5B,EAAsCP,QAAtC,CAA1B;;AACA,WAAO,MAAMM,iBAAiB,CAACE,MAAlB,EAAb;AACD,GAHD,EAGG,EAHH;AAKA,SAAOZ,UAAP;AACD,CAfD;;eAiBeD,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Dimensions, ScaledSize } from \"react-native\";\n\nconst useDimensions = () => {\n  const [dimensions, setDimensions] = useState(Dimensions.get(\"window\"));\n\n  const onChange = ({\n    window: { width, height, scale, fontScale },\n  }: {\n    window: ScaledSize;\n  }) => setDimensions({ width, height, scale, fontScale });\n\n  useEffect(() => {\n    const eventSubscription = Dimensions.addEventListener(\"change\", onChange);\n    return () => eventSubscription.remove();\n  }, []);\n\n  return dimensions;\n};\n\nexport default useDimensions;\n"]}